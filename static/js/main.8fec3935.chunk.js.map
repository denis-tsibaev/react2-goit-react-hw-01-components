{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendListItem/FriendListItem.module.css","components/TransactionHistory/TransactionHistory.module.css","components/FriendList/FriendList.module.css","components/Container/Container.jsx","components/Profile/Profile.jsx","components/Statistics/RandomColor.js","components/Statistics/Statistics.jsx","components/FriendListItem/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","Profile","name","tag","location","avatar","stats","followers","views","likes","style","profile","src","alt","label","quantity","randomColor","Math","random","toString","substr","Statistics","title","statistics","statList","map","id","percentage","item","backgroundColor","FriendListItem","isOnline","statusOnline","statusOffline","width","FriendList","friends","friendList","TransactionHistory","transactions","transactionHistory","thead","type","amount","currency","tr","App","user","statisticalData","items","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fec3935.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__26m7t\",\"avatar\":\"Profile_avatar__1gsWx\",\"stats\":\"Profile_stats__oBHCz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__xSIRj\",\"statList\":\"Statistics_statList__1aA5Z\",\"title\":\"Statistics_title__3rNs-\",\"label\":\"Statistics_label__JNPyY\",\"percentage\":\"Statistics_percentage__1ekgp\",\"item\":\"Statistics_item__3A7oy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"FriendListItem_avatar__XQbvt\",\"statusOnline\":\"FriendListItem_statusOnline__1A6Rp\",\"statusOffline\":\"FriendListItem_statusOffline__1cfKq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__2LFE9\",\"thead\":\"TransactionHistory_thead__wZ-4Z\",\"tr\":\"TransactionHistory_tr__3Kmyj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__2WSZW\",\"item\":\"FriendList_item__lJuut\"};","import PropTypes from 'prop-types';\r\nimport './Container.scss';\r\n\r\nexport const Container = ({ children }) => (\r\n    <div className=\"Container\">{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import PropTypes from 'prop-types';\r\nimport style from './Profile.module.css';\r\n\r\n// Компонент должен принимать несколько пропсов с информацией о пользователе:\r\n// name — имя пользователя\r\n// tag — тег в социальной сети без @\r\n// location — город и страна\r\n// avatar — url на изображение\r\n// stats — объект с информацией об активности\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n    const { followers, views, likes } = stats;\r\n    return (\r\n        <div className={style.profile}>\r\n            <div className=\"description\">\r\n                <img\r\n                    className={style.avatar}\r\n                    src={avatar}\r\n                    alt=\"Аватар пользователя\"\r\n                />\r\n                <p className={style.name}>{name}</p>\r\n                <p className={style.tag}>{tag}</p>\r\n                <p className={style.location}>{location}</p>\r\n            </div>\r\n\r\n            <ul className={style.stats}>\r\n                <li>\r\n                    <span className={style.label}>Followers: </span>\r\n                    <span className={style.quantity}>{followers}</span>\r\n                </li>\r\n                <li>\r\n                    <span className={style.label}>Views: </span>\r\n                    <span className={style.quantity}>{views}</span>\r\n                </li>\r\n                <li>\r\n                    <span className={style.label}>Likes: </span>\r\n                    <span className={style.quantity}>{likes}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    stats: PropTypes.objectOf(PropTypes.number.isRequired),\r\n};\r\n\r\nexport default Profile;\r\n","const randomColor = () => '#' + Math.random().toString(16).substr(-6);\r\n\r\nexport default randomColor;\r\n","import PropTypes from 'prop-types';\r\nimport style from './Statistics.module.css';\r\nimport randomColor from './RandomColor';\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n    return (\r\n        <section className={style.statistics}>\r\n            {title && <h2 className={style.title}>{title}</h2>}\r\n            <ul className={style.statList}>\r\n                {stats.map(({ id, label, percentage }) => (\r\n                    <li\r\n                        className={style.item}\r\n                        style={{ backgroundColor: randomColor() }}\r\n                        key={id}\r\n                    >\r\n                        <span className={style.label}>{label} </span>\r\n                        <span className={style.percentage}>{percentage}%</span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </section>\r\n    );\r\n};\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            label: PropTypes.string.isRequired,\r\n            percentage: PropTypes.number.isRequired,\r\n        }),\r\n    ),\r\n};\r\n\r\nexport default Statistics;\r\n","import style from './FriendListItem.module.css';\r\n\r\nconst FriendListItem = ({ name, isOnline, avatar }) => (\r\n    <>\r\n        <span\r\n            className={isOnline ? style.statusOnline : style.statusOffline}\r\n        ></span>\r\n        <img className={style.avatar} src={avatar} alt={name} width=\"48\" />\r\n        <p className={style.name}>{name}</p>\r\n    </>\r\n);\r\n\r\nexport default FriendListItem;\r\n","import FriendListItem from '../FriendListItem';\r\nimport style from './FriendList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FriendList = ({ friends }) => {\r\n    return (\r\n        <ul className={style.friendList}>\r\n            {friends.map(({ id, name, isOnline, avatar }) => (\r\n                <li key={id} className={style.item}>\r\n                    <FriendListItem\r\n                        name={name}\r\n                        isOnline={isOnline}\r\n                        avatar={avatar}\r\n                    />\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            isOnline: PropTypes.bool.isRequired,\r\n            avatar: PropTypes.string.isRequired,\r\n        }),\r\n    ),\r\n};\r\n\r\nexport default FriendList;\r\n","import style from './TransactionHistory.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TransactionHistory = ({ transactions }) => {\r\n    return (\r\n        <div>\r\n            <table className={style.transactionHistory}>\r\n                <thead className={style.thead}>\r\n                    <tr>\r\n                        <th>Type</th>\r\n                        <th>Amount</th>\r\n                        <th>Currency</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {transactions.map(({ id, type, amount, currency }) => (\r\n                        <tr key={id} className={style.tr}>\r\n                            <td>{type}</td>\r\n                            <td>{amount}</td>\r\n                            <td>{currency}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n    transactions: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            type: PropTypes.string.isRequired,\r\n            amount: PropTypes.string.isRequired,\r\n            currency: PropTypes.string.isRequired,\r\n        }),\r\n    ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import Container from './components/Container';\nimport Profile from './components/Profile';\nimport user from './components/Profile/user.json';\nimport Statistics from './components/Statistics';\nimport statisticalData from './components/Statistics/statistical-data.json';\nimport FriendList from './components/FriendList';\nimport friends from './components/FriendList/friends.json';\nimport TransactionHistory from './components/TransactionHistory';\nimport items from './components/TransactionHistory/transactions.json';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Container>\n                <Profile\n                    name={user.name}\n                    tag={user.tag}\n                    location={user.location}\n                    avatar={user.avatar}\n                    stats={user.stats}\n                />\n                <Statistics title=\"Upload stats:\" stats={statisticalData} />\n                <Statistics stats={statisticalData} />\n                <FriendList friends={friends} />\n                <TransactionHistory transactions={items} />\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}